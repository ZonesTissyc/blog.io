<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Def on ZTC&#39;Blog</title>
        <link>https://blog.ztcdream.top/categories/def/</link>
        <description>Recent content in Def on ZTC&#39;Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>ZTC@</copyright>
        <lastBuildDate>Sun, 18 May 2025 14:46:10 +0800</lastBuildDate><atom:link href="https://blog.ztcdream.top/categories/def/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Docker实战：运行一个容器</title>
        <link>https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/</link>
        <pubDate>Sun, 18 May 2025 14:46:10 +0800</pubDate>
        
        <guid>https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/</guid>
        <description>&lt;h2 id=&#34;运行helloworld&#34;&gt;运行hello,world


&lt;/h2&gt;


&lt;p&gt;Docker要简单地运行 &lt;code&gt;Hello,world!&lt;/code&gt;，在部署完Docker后，可以直接执行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run ubuntu:15.10 /bin/echo &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello world&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;run&lt;/code&gt; 表示要运行容器，后面跟的 &lt;code&gt;ubuntu:15.10&lt;/code&gt; 是镜像，本地不存在将从 Docker Hub 中拉取。 &lt;code&gt;/bin/echo &amp;quot;Hello world&amp;quot;&lt;/code&gt; 是启动镜像后执行的命令。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image1.png&#34;
	width=&#34;895&#34;
	height=&#34;228&#34;
	srcset=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image1_hu3493998025205837134.png 480w, https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image1_hu17819426467697481577.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;执行docker run&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;392&#34;
		data-flex-basis=&#34;942px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image2.png&#34;
	width=&#34;926&#34;
	height=&#34;272&#34;
	srcset=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image2_hu2939640268755027008.png 480w, https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image2_hu523165122873099004.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;docker运行结果&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;340&#34;
		data-flex-basis=&#34;817px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;直接 &lt;code&gt;dorcker run&lt;/code&gt; 后，不加其他参数，执行完 &lt;code&gt;shell&lt;/code&gt; 命令后容器就退出了。&lt;/p&gt;
&lt;p&gt;这一点可以在 Protainer 中验证：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image3.png&#34;
	width=&#34;957&#34;
	height=&#34;274&#34;
	srcset=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image3_hu5877279917796181566.png 480w, https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image3_hu13898183820035104901.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;执行后退出&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;349&#34;
		data-flex-basis=&#34;838px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;后台运行&#34;&gt;后台运行


&lt;/h2&gt;


&lt;p&gt;想让容器后台运行，要在启动时加上 &lt;code&gt;-d&lt;/code&gt; 参数。这样，容器的标准输出就不会出现在主Shell上。&lt;/p&gt;
&lt;p&gt;docker run -d ubuntu:15.10 /bin/sh -c &amp;ldquo;while true; do echo hello world; sleep 1; done&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image4.png&#34;
	width=&#34;961&#34;
	height=&#34;102&#34;
	srcset=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image4_hu12799455406448289630.png 480w, https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image4_hu14560685922181489283.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;后台运行&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;942&#34;
		data-flex-basis=&#34;2261px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这一次并没有输出 &lt;code&gt;hello world&lt;/code&gt;，而是返回了一长串数字，这是 &lt;strong&gt;容器ID&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;查询docker后台:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker ps
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image5.png&#34;
	width=&#34;977&#34;
	height=&#34;206&#34;
	srcset=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image5_hu8187311127736906468.png 480w, https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image5_hu12295061654320267861.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;docker ps&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;474&#34;
		data-flex-basis=&#34;1138px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可以看到刚才创建的 &lt;code&gt;ubuntu&lt;/code&gt; 容器还在运行。&lt;/p&gt;
&lt;p&gt;查看标准输出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker logs fa9878
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image6.png&#34;
	width=&#34;661&#34;
	height=&#34;545&#34;
	srcset=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image6_hu3926272597900205682.png 480w, https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image6_hu2425960583706217606.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;docker ps&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;121&#34;
		data-flex-basis=&#34;291px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可以看到容器所有的标准输出。&lt;/p&gt;
&lt;p&gt;停止容器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker stop fa9878
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;从面板中可以看到容器退出运行了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image7.png&#34;
	width=&#34;1268&#34;
	height=&#34;169&#34;
	srcset=&#34;https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image7_hu3339457471664246221.png 480w, https://blog.ztcdream.top/p/docker%E5%AE%9E%E6%88%98%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%AE%B9%E5%99%A8/image7_hu12658135927823480497.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;停止容器&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;750&#34;
		data-flex-basis=&#34;1800px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;参考文献


&lt;/h2&gt;


&lt;p&gt;菜鸟教程：&lt;a class=&#34;link&#34; href=&#34;https://www.runoob.com/docker/docker-hello-world.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker Hello,world&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
